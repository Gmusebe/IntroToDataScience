ylab("Count")
ggplot(data.combined[1:891, ], aes(x = Age, fill = Survived))+
geom_bar()+
facet_wrap(~Pclass)+
xlab("Age")+
ylab("Count")
ggplot(data.combined[1:891, ], aes(x = Age, fill = Survived))+
geom_histogram()+
facet_wrap(~Pclass)+
xlab("Age")+
ylab("Count")
ggplot(data.combined[1:891, ], aes(x = Age, fill = Survived))+
geom_histogram(binwidth = 10)+
facet_wrap(~Pclass)+
xlab("Age")+
ylab("Count")
data.combined[which(data.combined$Title == "Master")]
data.combined[which(data.combined$Title == "Master.")]
View(data.combined)
data.combined[which(data.combined$Title == "Master."), ]
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
facet_wrap(~Sex + Pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count")
boys <- data.combined[which(data.combined$title == "Master."),]
summary(boys$age)
View(boys)
boys <- data.combined[which(data.combined$Title == "Master."),]
summary(boys$age)
View(boys)
summary(boys$Age)
misses <- data.combined[which(data.combined$Title == "Miss."), ]
View(misses)
summary(misses$Age)
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5) +
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 10)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 15)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 30)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
missCH <- misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
summary(missCH)
missCH <- misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
summary(missCH$Age)
misses.alone <- misses[which(misses$sibsp == 0 & misses$parch == 0),]
summary(misses.alone$age)
misses.alone <- misses[which(misses$sibsp == 0 & misses$parch == 0),]
summary(misses.alone$Age)
misses.alone <- misses[which(misses$Sibsp == 0 & misses$Parch == 0),]
summary(misses.alone$Age)
misses <- data.combined[which(data.combined$Title == "Miss."),]
summary(misses$age)
misses <- data.combined[which(data.combined$Title == "Miss."),]
summary(misses$Age)
misses.alone <- misses[which(misses$Sibsp == 0 & misses$Parch == 0),]
summary(misses.alone$Age)
View(misses)
misses.alone <- misses[which(misses$SibSp == 0), ]
misses.alone <- misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
summary(misses.alone$Age)
length(which(misses.alone$Age <= 14.5))
summary(data.combined$sibsp)
summary(data.combined$Sibsp)
summary(data.combined$SibSp)
length(unique(data.combined$sibsp))
length(unique(data.combined$sibSp))
length(unique(data.combined$SibSp))
ggplot(data.combined[1:891,], aes(x = SibSp, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass +Title) +
ggtitle("Pclass, Title") +
xlab("SibSp") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
data.combined$ParCh <- as.factor(data.combined$ParCh)
data.combined$Parch <- as.factor(data.combined$Parch)
ggplot(data.combined[1:891,], aes(x = Parch, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("ParCh") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
temp.sibsp <- c(train$sibsp, test$sibsp)
temp.sibsp <- c(train$SibSp, test$SibSp)
temp.parch <- c(train$Parch, test$Parch)
data.combined$family.size <- as.factor(temp.sibsp + temp.parch + 1)
View(data.combined)
ggplot(data.combined[1:891,], aes(x = family.size, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("family.size") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Age, fill=Survived)) +
geom_histogram() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Age, fill=Survived)) +
geom_histogram(binwidth =  30)+
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Age, fill=Survived)) +
geom_histogram(binwidth =  10)+
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Age, fill=Survived)) +
geom_histogram(binwidth =  10)+
facet_wrap(~Pclass+Sex)+
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
facet_wrap(~Sex + Pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived ,], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
summary(data.combined[1:891,"Age"])
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
facet_wrap(~Sex + Pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count")
misses <- data.combined[which(data.combined$Title == "Miss."),]
summary(misses$Age)
ggplot(data.combined[1:891,], aes(x = SibSp, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass +Title) +
ggtitle("Pclass, Title") +
xlab("SibSp") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
family.size <- as.factor(temp.Sibsp + temp.Parch + 1)
data.combined <- add_column(data.combined, family.size, .after = 9)
temp.sibsp <- c(train$SibSp, test$SibSp)
temp.parch <- c(train$Parch, test$Parch)
family.size <- as.factor(temp.sibsp + temp.parch + 1)
data.combined <- add_column(data.combined, family.size, .after = 9)
View(data.combined)
?class
# Load raw data
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test.csv", header = TRUE)
# Add a "Survived" variable to the test set to allow for combining data sets
library(tibble)
test <- add_column(test, data.frame(Survived = rep("None", nrow(test))), .after = 1)
# Combine data sets
data.combined <- rbind(train, test)
# A bit about R data types (e.g., factors)
str(data.combined)
data.combined$Survived <- as.factor(data.combined$Survived)
data.combined$Pclass <- as.factor(data.combined$Pclass)
data.combined$Name <- as.factor(data.combined$Name)
# Check  for the missing data
visdat::vis_dat(data.combined)
#  Check the measure of data missing
naniar::vis_miss(data.combined)
# Take a look at gross survival rates
library(epiDisplay)
tab1(data.combined$Survived, col=c("chocolate","brown1","brown4"))
# Distribution across classes
tab1(data.combined$Pclass, col=c("chocolate","brown1","brown4"))
# Load up ggplot2 package to use for visualizations
library(ggplot2)
# Hypothesis - Rich folks survived at a higer rate
train$Pclass <- as.factor(train$Pclass)
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
geom_bar() +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
# Examine the first few names in the training data set
train$Name <- as.character(train$Name)
head(train$Name)
# How many unique names are there across both train & test?
length(unique(data.combined$Name))
# Two duplicate names, take a closer look
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(data.combined$Name)), "Name"])
# There are no duplicates in the data
# What is up with the 'Miss.' and 'Mr.' thing?
# Expand upon the realtionship between `Survived` and `Pclass` by adding the new `Title` variable to the
# data set and then explore a potential 3-dimensional relationship.
library(stringr)
Title <- as.factor(str_extract(string = data.combined$Name, pattern = "(Mr|Master|Mrs|Miss)\\."))
data.combined <- add_column(data.combined, Title, .after = 3)
# Any correlation with other variables (e.g., sibsp[Siblings/Spouse])?
misses <- data.combined[which(str_detect(data.combined$Name, "Miss.")),]
misses[1:5,]
# Hypothesis - Name titles correlate with age
mrses <- data.combined[which(data.combined$Title == "Mrs."), ]
mrses[1:5,]
# Check out males to see if pattern continues
males <- data.combined[which(data.combined$Sex == "male"), ]
males[1:5,]
# Since we only have survived lables for the train set, only use the
# first 891 rows
ggplot(data.combined[1:891,], aes(x = Title, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Title") +
ylab("Total Count") +
labs(fill = "Survived")
# What's the distribution of females to males across train & test?
tab1(data.combined$Sex, col=c("chocolate","brown1"))
# Visualize the 3-way relationship of sex, pclass, and survival, compare to analysis of title
ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
# There is decrease in survival rates for the female and the male across the class status decreased.
# OK, age and sex seem pretty important as derived from analysis of title, let's take a closer
# look at the distibutions of age over entire data set
summary(data.combined$Age)
# As earlier seen we had missing data in age. Now in specific we have 263 missing age data.
summary(data.combined[1:891,"Age"])
# Most of the age data is missing in he train data
# Just to be thorough, take a look at survival rates broken out by sex, pclass, and age
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
facet_wrap(~Sex + Pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count")
# Validate that "Master." is a good proxy for male children
boys <- data.combined[which(data.combined$Title == "Master."),]
summary(boys$Age)
# We know that "Miss." is more complicated to define female children, let's examine further
misses <- data.combined[which(data.combined$Title == "Miss."),]
summary(misses$Age)
# We have a mixture of children and adults, 25% being less than 15 years.
# The miss's age data seems to be skewed to the right. Meaning most miss's are adults.
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
# OK, appears female children may have different survival rate,
# could be a candidate for feature engineering later
misses.alone <- misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
summary(misses.alone$Age)
length(which(misses.alone$Age <= 14.5))
# Move on to the sibsp variable, summarize the variable
summary(data.combined$SibSp)
# Can we treat as a factor?
length(unique(data.combined$SibSp))
data.combined$SibSp <- as.factor(data.combined$SibSp)
# We believe title is predictive. Visualize survival reates by sibsp, pclass, and title
ggplot(data.combined[1:891,], aes(x = SibSp, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass +Title) +
ggtitle("Pclass, Title") +
xlab("SibSp") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Treat the parch vaiable as a factor and visualize
data.combined$Parch <- as.factor(data.combined$Parch)
ggplot(data.combined[1:891,], aes(x = Parch, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("ParCh") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Let's try some feature engineering. What about creating a family size feature?
temp.sibsp <- c(train$SibSp, test$SibSp)
temp.parch <- c(train$Parch, test$Parch)
family.size <- as.factor(temp.sibsp + temp.parch + 1)
data.combined <- add_column(data.combined, family.size, .after = 9)
# Visualize it to see if it is predictive
ggplot(data.combined[1:891,], aes(x = family.size, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("family.size") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Load raw data
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test.csv", header = TRUE)
# Add a "Survived" variable to the test set to allow for combining data sets
library(tibble)
test <- add_column(test, data.frame(Survived = rep("None", nrow(test))), .after = 1)
# Combine data sets
data.combined <- rbind(train, test)
# A bit about R data types (e.g., factors)
str(data.combined)
data.combined$Survived <- as.factor(data.combined$Survived)
data.combined$Pclass <- as.factor(data.combined$Pclass)
data.combined$Name <- as.factor(data.combined$Name)
# Check  for the missing data
visdat::vis_dat(data.combined)
#  Check the measure of data missing
naniar::vis_miss(data.combined)
# Take a look at gross survival rates
library(epiDisplay)
tab1(data.combined$Survived, col=c("chocolate","brown1","brown4"))
# Distribution across classes
tab1(data.combined$Pclass, col=c("chocolate","brown1","brown4"))
# Load up ggplot2 package to use for visualizations
library(ggplot2)
# Hypothesis - Rich folks survived at a higer rate
train$Pclass <- as.factor(train$Pclass)
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
geom_bar() +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
# Examine the first few names in the training data set
train$Name <- as.character(train$Name)
head(train$Name)
# How many unique names are there across both train & test?
length(unique(data.combined$Name))
# Two duplicate names, take a closer look
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(data.combined$Name)), "Name"])
# There are no duplicates in the data
# What is up with the 'Miss.' and 'Mr.' thing?
# Expand upon the realtionship between `Survived` and `Pclass` by adding the new `Title` variable to the
# data set and then explore a potential 3-dimensional relationship.
library(stringr)
Title <- as.factor(str_extract(string = data.combined$Name, pattern = "(Mr|Master|Mrs|Miss)\\."))
data.combined <- add_column(data.combined, Title, .after = 3)
# Any correlation with other variables (e.g., sibsp[Siblings/Spouse])?
misses <- data.combined[which(str_detect(data.combined$Name, "Miss.")),]
misses[1:5,]
# Hypothesis - Name titles correlate with age
mrses <- data.combined[which(data.combined$Title == "Mrs."), ]
mrses[1:5,]
# Check out males to see if pattern continues
males <- data.combined[which(data.combined$Sex == "male"), ]
males[1:5,]
# Since we only have survived lables for the train set, only use the
# first 891 rows
ggplot(data.combined[1:891,], aes(x = Title, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Title") +
ylab("Total Count") +
labs(fill = "Survived")
# What's the distribution of females to males across train & test?
tab1(data.combined$Sex, col=c("chocolate","brown1"))
# Visualize the 3-way relationship of sex, pclass, and survival, compare to analysis of title
ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
# There is decrease in survival rates for the female and the male across the class status decreased.
# OK, age and sex seem pretty important as derived from analysis of title, let's take a closer
# look at the distibutions of age over entire data set
summary(data.combined$Age)
# As earlier seen we had missing data in age. Now in specific we have 263 missing age data.
summary(data.combined[1:891,"Age"])
# Most of the age data is missing in he train data
# Just to be thorough, take a look at survival rates broken out by sex, pclass, and age
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
facet_wrap(~Sex + Pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count")
# Validate that "Master." is a good proxy for male children
boys <- data.combined[which(data.combined$Title == "Master."),]
summary(boys$Age)
# We know that "Miss." is more complicated to define female children, let's examine further
misses <- data.combined[which(data.combined$Title == "Miss."),]
summary(misses$Age)
# We have a mixture of children and adults, 25% being less than 15 years.
# The miss's age data seems to be skewed to the right. Meaning most miss's are adults.
ggplot(misses[misses$Survived != "None",], aes(x = Age, fill = Survived)) +
facet_wrap(~Pclass) +
geom_histogram(binwidth = 5)+
ggtitle("Age for 'Miss.' by Pclass") +
xlab("Age") +
ylab("Total Count")
# OK, appears female children may have different survival rate,
# could be a candidate for feature engineering later
misses.alone <- misses[which(misses$SibSp == 0 & misses$Parch == 0), ]
summary(misses.alone$Age)
length(which(misses.alone$Age <= 14.5))
# Move on to the sibsp variable, summarize the variable
summary(data.combined$SibSp)
# Can we treat as a factor?
length(unique(data.combined$SibSp))
data.combined$SibSp <- as.factor(data.combined$SibSp)
# We believe title is predictive. Visualize survival reates by sibsp, pclass, and title
ggplot(data.combined[1:891,], aes(x = SibSp, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass +Title) +
ggtitle("Pclass, Title") +
xlab("SibSp") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Treat the parch vaiable as a factor and visualize
data.combined$Parch <- as.factor(data.combined$Parch)
ggplot(data.combined[1:891,], aes(x = Parch, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("ParCh") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Let's try some feature engineering. What about creating a family size feature?
temp.sibsp <- c(train$SibSp, test$SibSp)
temp.parch <- c(train$Parch, test$Parch)
family.size <- as.factor(temp.sibsp + temp.parch + 1)
data.combined <- add_column(data.combined, family.size, .after = 9)
# Visualize it to see if it is predictive
ggplot(data.combined[1:891,], aes(x = family.size, fill = Survived)) +
geom_bar() +
facet_wrap(~Pclass + Title) +
ggtitle("Pclass, Title") +
xlab("family.size") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
str(data.combined$Ticket)
View(data.combined)
ticket.first.char <- ifelse(data.combined$Ticket == "", " ", substr(data.combined$Ticket, 1, 1))
unique(ticket.first.char)
